//  ******************************************************
// 
//     File generated by: neuroConstruct v1.6.1
// 
//  ******************************************************

echo ""
echo "*****************************************************"
echo ""
echo "    neuroConstruct generated GENESIS simulation"
echo "    for project: /home/Simon/nC_projects/Rat_Mitral_Cell_Gap_Network_copy4_copy2_Genesis_single_cell_no_calcium/Rat_Mitral_Cell_Gap_Network_copy4_copy2_Genesis_single_cell_no_calcium.ncx"
echo ""
echo "    Description: "

echo "    Simulation configuration: Default Simulation Configuration"
echo "    Simulation reference: Sim_153"
echo " "
echo  "*****************************************************"



//   Initializes random-number generator

randseed 637080240

//   This temperature is needed if any of the channels are temp dependent (Q10 dependence) 
//   

float celsius = 35.0

str units = "GENESIS SI Units"

str genesisCore = "GENESIS2"


//   Including neuroConstruct utilities file

include nCtools 

//   Including external files

include compartments 

//   Creating element for channel prototypes

if (!{exists /library})
    create neutral /library
end

disable /library
pushe /library
make_cylind_compartment
make_cylind_symcompartment
pope

env // prints details on some global variables



//   Including channel mechanisms 
//   

include LeakConductance
make_LeakConductance

include NaxSH10_ChannelML
make_NaxSH10_ChannelML

include KA_ChannelML
make_KA_ChannelML

include NaxSH0_ChannelML
make_NaxSH0_ChannelML

include Kdr_ChannelML
make_Kdr_ChannelML


//   Including synaptic mech 
//   



create neutral /cells

//////////////////////////////////////////////////////////////////////
//   Cell group 0: CellGroup_2 has cells of type: Cell3
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_2
//   Adding cells of type Cell3 in region Regions_2

//   Placing these cells in a region described by: Rectangular Box from point: (145.0, 175.0, 0.0) to (195.0, 225.0, 50.0)

//   Packing has been generated by: Single cell: (170.0, 200.0, 25.0) relative to region


str compName

readcell  Cell3.p /cells/CellGroup_2/CellGroup_2_0
// addfield /cells/CellGroup_2/CellGroup_2_0 celltype
// setfield /cells/CellGroup_2/CellGroup_2_0 celltype Cell3

position /cells/CellGroup_2/CellGroup_2_0 3.15E-4 3.75E-4 2.5E-5


//////////////////////////////////////////////////////////////////////
//   Cell group 1: CellGroup_1 has cells of type: Cell2
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_1
//   Adding cells of type Cell2 in region Regions_1

//   Placing these cells in a region described by: Rectangular Box from point: (0.0, 0.0, 18.0) to (50.0, 50.0, 68.0)

//   Packing has been generated by: Single cell: (25.0, 25.0, 43.0) relative to region


str compName

readcell  Cell2.p /cells/CellGroup_1/CellGroup_1_0
// addfield /cells/CellGroup_1/CellGroup_1_0 celltype
// setfield /cells/CellGroup_1/CellGroup_1_0 celltype Cell2

position /cells/CellGroup_1/CellGroup_1_0 2.5E-5 2.5E-5 6.1E-5


//////////////////////////////////////////////////////////////////////
//   Cell group 2: CellGroup_6 has cells of type: Cell6
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_6
//   Adding cells of type Cell6 in region Regions_6

//   Placing these cells in a region described by: Rectangular Box from point: (-460.0, 235.0, 0.0) to (-410.0, 285.0, 50.0)

//   Packing has been generated by: Single cell: (-435.0, 260.0, 25.0) relative to region


str compName

readcell  Cell6.p /cells/CellGroup_6/CellGroup_6_0
// addfield /cells/CellGroup_6/CellGroup_6_0 celltype
// setfield /cells/CellGroup_6/CellGroup_6_0 celltype Cell6

position /cells/CellGroup_6/CellGroup_6_0 -8.95E-4 4.95E-4 2.5E-5


//////////////////////////////////////////////////////////////////////
//   Cell group 3: CellGroup_5 has cells of type: Cell5
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_5
//   Adding cells of type Cell5 in region Regions_5

//   Placing these cells in a region described by: Rectangular Box from point: (-620.0, 235.0, 0.0) to (-570.0, 285.0, 50.0)

//   Packing has been generated by: Single cell: (-595.0, 260.0, 25.0) relative to region


str compName

readcell  Cell5.p /cells/CellGroup_5/CellGroup_5_0
// addfield /cells/CellGroup_5/CellGroup_5_0 celltype
// setfield /cells/CellGroup_5/CellGroup_5_0 celltype Cell5

position /cells/CellGroup_5/CellGroup_5_0 -0.001215 4.95E-4 2.5E-5


//////////////////////////////////////////////////////////////////////
//   Cell group 4: CellGroup_4 has cells of type: Cell4
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_4
//   Adding cells of type Cell4 in region Regions_4

//   Placing these cells in a region described by: Rectangular Box from point: (60.0, 205.0, 0.0) to (110.0, 255.0, 50.0)

//   Packing has been generated by: Single cell: (85.0, 230.0, 25.0) relative to region


str compName

readcell  Cell4.p /cells/CellGroup_4/CellGroup_4_0
// addfield /cells/CellGroup_4/CellGroup_4_0 celltype
// setfield /cells/CellGroup_4/CellGroup_4_0 celltype Cell4

position /cells/CellGroup_4/CellGroup_4_0 1.45E-4 4.35E-4 2.5E-5


//////////////////////////////////////////////////////////////////////
//   Cell group 5: CellGroup_3 has cells of type: Cell1
//////////////////////////////////////////////////////////////////////


create neutral /cells/CellGroup_3
//   Adding cells of type Cell1 in region Regions_3

//   Placing these cells in a region described by: Rectangular Box from point: (-470.0, 125.0, 0.0) to (-420.0, 175.0, 50.0)

//   Packing has been generated by: Single cell: (-445.0, 150.0, 25.0) relative to region


str compName

readcell  Cell1.p /cells/CellGroup_3/CellGroup_3_0
// addfield /cells/CellGroup_3/CellGroup_3_0 celltype
// setfield /cells/CellGroup_3/CellGroup_3_0 celltype Cell1

position /cells/CellGroup_3/CellGroup_3_0 -9.15E-4 2.75E-4 2.5E-5



//////////////////////////////////////////////////////////////////////
//   Adding 0 stimulation(s)
//////////////////////////////////////////////////////////////////////

// create neutral /stim
// create neutral /stim/pulse
// create neutral /stim/rndspike

//////////////////////////////////////////////////////////////////////
//   Crank-Nicholson num integration method (11), using hsolve: true, chanmode: 0
//////////////////////////////////////////////////////////////////////

// echo "----------- Specifying hsolve"

// str cellName
// foreach cellName ({el /cells/#/#})
//    create hsolve {cellName}/solve
//    setfield {cellName}/solve path {cellName}/#[][TYPE=compartment],{cellName}/#[][TYPE=symcompartment] comptmode 1
//    setmethod {cellName}/solve 11
//    setfield {cellName}/solve chanmode 0
//    call {cellName}/solve SETUP
//    reset
// end
// reset
// echo "-----------Done specifying hsolve "


//////////////////////////////////////////////////////////////////////
//   Settings for running the demo
//////////////////////////////////////////////////////////////////////


// float dt = 2.5E-5
// float duration = 0.3
// int steps =  {round {{duration}/{dt}}}

// setclock 0 {dt} // Units[GENESIS_SI_time, symbol: s]

//////////////////////////////////////////////////////////////////////
//   Adding 0 plot(s)
//////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////
//   Creating a simple Run Control
//////////////////////////////////////////////////////////////////////

// if (!{exists /controls})
//    create neutral /controls
// end
// create xform /controls/runControl [700, 20, 200, 140] -title "Run Controls: Sim_153"
// xshow /controls/runControl

// create xbutton /controls/runControl/RESET -script reset
// str rerun
// rerun = { strcat "step " {steps} }
// create xbutton /controls/runControl/RUN -script {rerun}
// create xbutton /controls/runControl/STOP -script stop

// create xbutton /controls/runControl/QUIT -script quit


// echo Checking and resetting...

// maxwarnings 400


//   Single simulation run...

// reset
// str simsDir
// simsDir = "/home/Simon/nC_projects/Rat_Mitral_Cell_Gap_Network_copy4_copy2_Genesis_single_cell_no_calcium/simulations/"

// str simReference
// simReference = "Sim_153"

// str targetDir
// targetDir =  {strcat {simsDir} {simReference}}
// targetDir =  {strcat {targetDir} {"/"}}

//////////////////////////////////////////////////////////////////////
//   This will run a full simulation when the file is executed
//////////////////////////////////////////////////////////////////////

// reset
// str startTimeFile
// str stopTimeFile
// startTimeFile = {strcat {targetDir} {"starttime"}}
// stopTimeFile = {strcat {targetDir} {"stoptime"}}
// sh {strcat {"date +%s.%N > "} {startTimeFile}}

// echo Starting sim: Sim_153 on {genesisCore} with dur: {duration} dt: {dt} and steps: {steps} (Crank-Nicholson num integration method (11), using hsolve: true, chanmode: 0)
// date +%F__%T__%N
// step {steps}

// echo Finished simulation reference: Sim_153
// date +%F__%T__%N
// echo Data stored in directory: {targetDir}

//   This will ensure the data files don't get written to again..


// str fileElement
// foreach fileElement ({el /fileout/cells/##[][TYPE=asc_file]})
// end
// foreach fileElement ({el /fileout/cells/##[][TYPE=event_tofile]})
//    echo Closing {fileElement}

//    call {fileElement} CLOSE
// end

//   Saving file containing time details

// float i, timeAtStep
// create asc_file /fileout/timefile
// setfield /fileout/timefile    flush 1    leave_open 1    append 1  notime 1
// setfield /fileout/timefile filename {strcat {targetDir} {"time.dat"}}
// call /fileout/timefile OUT_OPEN
// for (i = 0; i <= {steps}; i = i + 1)
//    timeAtStep = {dt} * i
//    call /fileout/timefile OUT_WRITE {timeAtStep} 
// end

// call /fileout/timefile FLUSH


// sh {strcat {"date +%s.%N > "} {stopTimeFile}}

// openfile {startTimeFile} r
// openfile {stopTimeFile} r
// float starttime = {readfile {startTimeFile}}  
// float stoptime =  {readfile {stopTimeFile}}  
// float runTime = {stoptime - starttime}  
// echo Simulation took : {runTime} seconds  
// closefile {startTimeFile} 
// closefile {stopTimeFile} 


// str hostnameFile
// hostnameFile = {strcat {targetDir} {"hostname"}}
// sh {strcat {"hostname > "} {hostnameFile}}
// openfile {hostnameFile} r
// str hostnamestr = {readfile {hostnameFile}}
// closefile {hostnameFile}

// str simPropsFile
// simPropsFile = {strcat {targetDir} {"simulator.props"}}
// openfile {simPropsFile} w
// writefile {simPropsFile} "RealSimulationTime="{runTime}
// writefile {simPropsFile} "Host="{hostnamestr}
// closefile {simPropsFile} 
